import { useState, useEffect } from 'react'; const quotes = [{text:'The only way to do great work is to love what you do.',author:'Steve Jobs'},{text:'Innovation distinguishes between a leader and a follower.',author:'Steve Jobs'},{text:'Life is what happens when you are busy making other plans.',author:'John Lennon'},{text:'The future belongs to those who believe in the beauty of their dreams.',author:'Eleanor Roosevelt'},{text:'It is during our darkest moments that we must focus to see the light.',author:'Aristotle'},{text:'Believe you can and you are halfway there.',author:'Theodore Roosevelt'},{text:'The only impossible journey is the one you never begin.',author:'Tony Robbins'},{text:'Success is not final, failure is not fatal: it is the courage to continue that counts.',author:'Winston Churchill'},{text:'Do what you can, with what you have, where you are.',author:'Theodore Roosevelt'},{text:'Everything you can imagine is real.',author:'Pablo Picasso'},{text:'The best time to plant a tree was 20 years ago. The second best time is now.',author:'Chinese Proverb'},{text:'Your time is limited, do not waste it living someone else life.',author:'Steve Jobs'},{text:'Whether you think you can or you think you cannot, you are right.',author:'Henry Ford'},{text:'The only limit to our realization of tomorrow will be our doubts of today.',author:'Franklin D. Roosevelt'},{text:'Do not watch the clock; do what it does. Keep going.',author:'Sam Levenson'}]; const gradients = ['from-purple-400 via-pink-500 to-red-500','from-green-400 via-blue-500 to-purple-600','from-yellow-400 via-red-500 to-pink-500','from-blue-400 via-purple-500 to-pink-500','from-indigo-400 via-purple-500 to-pink-500','from-cyan-400 via-blue-500 to-purple-600','from-orange-400 via-red-500 to-pink-600','from-teal-400 via-cyan-500 to-blue-600']; export default function App() { const [quote, setQuote] = useState(quotes[0]); const [gradient, setGradient] = useState(gradients[0]); const [count, setCount] = useState(0); const [favorites, setFavorites] = useState<typeof quotes>([]); const [copied, setCopied] = useState(false); const [animate, setAnimate] = useState(false); useEffect(() => { const saved = localStorage.getItem('favorites'); const savedCount = localStorage.getItem('count'); if (saved) setFavorites(JSON.parse(saved)); if (savedCount) setCount(parseInt(savedCount)); }, []); const generateQuote = () => { setAnimate(true); setTimeout(() => { const newQuote = quotes[Math.floor(Math.random() * quotes.length)]; const newGradient = gradients[Math.floor(Math.random() * gradients.length)]; setQuote(newQuote); setGradient(newGradient); const newCount = count + 1; setCount(newCount); localStorage.setItem('count', newCount.toString()); setAnimate(false); }, 300); }; const copyToClipboard = () => { navigator.clipboard.writeText(`"${quote.text}" - ${quote.author}`); setCopied(true); setTimeout(() => setCopied(false), 2000); }; const toggleFavorite = () => { const isFav = favorites.some(f => f.text === quote.text); let newFavs; if (isFav) { newFavs = favorites.filter(f => f.text !== quote.text); } else { newFavs = [...favorites, quote]; } setFavorites(newFavs); localStorage.setItem('favorites', JSON.stringify(newFavs)); }; const shareTwitter = () => { const url = `https://twitter.com/intent/tweet?text=${encodeURIComponent(`"${quote.text}" - ${quote.author}`)}`; window.open(url, '_blank'); }; const isFavorite = favorites.some(f => f.text === quote.text); return (<div className={`min-h-screen bg-gradient-to-br ${gradient} flex items-center justify-center p-4 transition-all duration-1000`}><div className="max-w-2xl w-full"><div className={`bg-white/95 backdrop-blur-sm rounded-3xl shadow-2xl p-8 md:p-12 transition-all duration-300 ${animate ? 'opacity-0 scale-95' : 'opacity-100 scale-100'}`}><div className="text-center mb-8"><span className="text-6xl text-gray-300">‚ùù</span></div><blockquote className="text-2xl md:text-3xl font-serif text-gray-800 text-center mb-8 leading-relaxed">{quote.text}</blockquote><p className="text-xl text-gray-600 text-center mb-8 font-medium">‚Äî {quote.author}</p><div className="flex flex-wrap justify-center gap-4 mb-6"><button onClick={generateQuote} className="bg-gradient-to-r from-purple-500 to-pink-500 text-white px-8 py-3 rounded-full font-semibold hover:shadow-lg transform hover:scale-105 transition-all duration-200">New Quote</button><button onClick={copyToClipboard} className="bg-gray-700 text-white px-6 py-3 rounded-full font-semibold hover:shadow-lg transform hover:scale-105 transition-all duration-200">{copied ? '‚úì Copied!' : 'üìã Copy'}</button><button onClick={toggleFavorite} className={`${isFavorite ? 'bg-red-500' : 'bg-gray-500'} text-white px-6 py-3 rounded-full font-semibold hover:shadow-lg transform hover:scale-105 transition-all duration-200`}>{isFavorite ? '‚ù§Ô∏è Saved' : 'ü§ç Save'}</button><button onClick={shareTwitter} className="bg-blue-400 text-white px-6 py-3 rounded-full font-semibold hover:shadow-lg transform hover:scale-105 transition-all duration-200">üê¶ Tweet</button></div><div className="text-center text-gray-600"><p className="text-sm">Quotes viewed: <span className="font-bold text-purple-600">{count}</span></p><p className="text-sm mt-1">Favorites: <span className="font-bold text-red-500">{favorites.length}</span></p></div>{favorites.length > 0 && (<div className="mt-8 pt-6 border-t border-gray-200"><h3 className="text-lg font-semibold text-gray-700 mb-4 text-center">Your Favorites</h3><div className="max-h-48 overflow-y-auto space-y-2">{favorites.map((fav, idx) => (<div key={idx} className="text-sm text-gray-600 p-3 bg-gray-50 rounded-lg hover:bg-gray-100 transition-colors cursor-pointer" onClick={() => { setQuote(fav); setAnimate(true); setTimeout(() => setAnimate(false), 300); }}>"{fav.text}" - {fav.author}</div>))}</div></div>)}</div></div></div>); }